- name: Update Firewall NAT rule
  tags: firewall-nat
  when: "nat_rule and 'rule_number' in nat_rule and (nat_rule.rule_number | string) in ng_ipv4_nat_rules[nat_chain]"
  block:
    - name: (Update) create list of commands
      vars:
        _cmd: "{{ ['set ' + item.key|string + '=' + item.value|string|replace(' ','_') ] }}"
      set_fact:
        commands: "{{ commands | default([]) + _cmd }}"
      loop: "{{ nat_rule | dict2items }}"
      when: "item.key in (_nat[nat_chain]._update | split(' ')) and item.value"

    - name: (Update) show commands
      debug:
        msg: "{{ commands | join(' ; ') }}"

    - name: (Update) execute commands
      zpe.nodegrid.nodegrid_cmds:
        cmds:
          - cmd: 'cd /settings/ipv4_nat/chains/{{ nat_chain }}/{{ nat_rule.rule_number }}'
          - cmd: "{{ commands | join(' ; ') | trim }}"
          - cmd: 'commit'
      register: ng_commands_output
    - name: (Update) Show commands ng_commands_output
      debug:
        msg: "{{ ng_commands_output }}"

- name: Create Firewall NAT rules
  tags: firewall-nat
  when: "nat_rule and 'rule_number' not in nat_rule or (nat_rule.rule_number | string) not in ng_ipv4_nat_rules[nat_chain]"
  block:
    - name: (Add) create list of commands
      vars:
        _cmd: "{{ ['set ' + item.key|string + '=' + item.value|string|replace(' ','_') ] }}"
      set_fact:
        commands: "{{ commands | default([]) + _cmd }}"
      loop: "{{ nat_rule | dict2items }}"
      when: "item.key in _nat[nat_chain]._add | split(' ') and item.value"

    - name: (Add) show commands
      debug:
        msg: "{{ commands | join(' ; ') }}"

    - name: (Add) execute commands
      zpe.nodegrid.nodegrid_cmds:
        cmds:
          - cmd: 'cd /settings/ipv4_nat/chains/{{ nat_chain }}'
          - cmd: 'add'
          - cmd: "{{ commands | join(' ; ') | trim }}"
          - cmd: 'commit'
      register: ng_commands_output

    - name: (Add) Show commands ng_commands_output
      debug:
        msg: "{{ ng_commands_output }}"

- name: Clean commands list
  set_fact:
    commands: "{{ [] }}"