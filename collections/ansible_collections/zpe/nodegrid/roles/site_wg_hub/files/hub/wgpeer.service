#!/bin/sh

### BEGIN INIT INFO
# Provides:          wgpeer
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Wireguard Peering Service 
# Description:       Wireguard Peering Service 
### END INIT INFO

# Change the next 3 lines to suit where you install your script and what you want to call it
DIR=/home/admin/hub
DAEMON=$DIR/app.py
ACTIVATE=$DIR/venv/bin/activate
DAEMON_NAME=wgpeer
LOG_FILE=/var/log/wgpeerservice.log

# Add any command line options for your daemon here
DAEMON_OPTS=""

# This next line determines what user the script runs as.
# Root generally not recommended but necessary if you are using the Raspberry Pi GPIO from Python.
DAEMON_USER=root

# The process ID of the script when it runs is stored here:
PIDFILE=/var/run/$DAEMON_NAME.pid

. /lib/lsb/init-functions

do_start () {
    log_begin_msg "Starting system $DAEMON_NAME daemon"
    source $ACTIVATE
    cd $DIR
    ./app.py --num-workers 4 --pid $PIDFILE --daemon --log-file $LOG_FILE
    log_end_msg $?
}
do_stop () {
    log_begin_msg "Stopping system $DAEMON_NAME daemon"
    start-stop-daemon --stop --pidfile $PIDFILE --retry 10
#    start-stop-daemon --stop --user $DAEMON_USER --stop --pidfile $PIDFILE --retry 10
#    killproc -p $PIDFILE $DAEMON    
    log_end_msg $?
}

case "$1" in

    start|stop)
        do_${1}
        ;;

    restart|reload|force-reload)
        do_stop
        do_start
        ;;

    status)
        status_of_proc "$DAEMON_NAME" "$DAEMON" && exit 0 || exit $?
        ;;

    *)
        echo "Usage: /etc/init.d/$DAEMON_NAME {start|stop|restart|status}"
        exit 1
        ;;

esac
exit 0
